name: Taipei Bus CI/CD

# control the flow
on:
  push:
    branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run Python unit test to check web and API status
      run: |
        cd flask/app/
        python3 -m pytest -v

    - name: Build the .env file for Flask application
      run: |
        cd flask/app/
        echo "${{ secrets.ENV_FILE }}" > .env
    
    - name: Build Docker network for next step use
      run: |
        docker network create self-nginx-proxy
    
    - name: Run Docker Compose to start Taipei Bus application
      run: |
        docker compose up --build -d
    

    
#    - name: Run Docker Compose to start Nginx proxy server and automate create/renew SSL certificates via Let's Encrypt
#      run: |
#        docker compose -f docker-compose-nginx-proxy.yml up --build
    
    
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"

